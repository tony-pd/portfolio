{"version":3,"sources":["components/VisibilitySensor.js","components/Popup.js","components/Projects.js"],"names":["VisibilitySensor","props","state","active","this","once","children","theRest","onChange","isVisible","setState","Component","defaultProps","Img","styled","img","P","p","Popup","title","desc","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","src","alt","Div","div","Images","Wrapper","Projects","data","React","useState","modalShow","setModalShow","setTitle","setDesc","setImg","map","section","index","menu","projects","key","delay","to","opacity","transform","style","item","thumb","onClick","onImgClick","show","onHide"],"mappings":"2LAIMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,QAAQ,GAHO,E,qDAOT,IAAD,OACCA,EAAWC,KAAKF,MAAhBC,OADD,EAEgCC,KAAKH,MAApCI,EAFD,EAECA,KAAMC,EAFP,EAEOA,SAAaC,EAFpB,mCAGP,OACE,kBAAC,IAAD,eACEJ,OAAQA,EACRK,SAAU,SAACC,GAAD,OACRJ,GACAI,GACA,EAAKC,SAAS,CAAEP,QAAQ,IAAS,iBAI/BI,IAEH,gBAAGE,EAAH,EAAGA,UAAH,OAAmBH,EAAS,CAAEG,qB,GAvBRE,aAkC/BX,EAAiBY,aAAe,CAC9BP,MAAM,GAGOL,O,2UCrCf,IAAMa,EAAMC,IAAOC,IAAV,KAIHC,EAAIF,IAAOG,EAAV,KA6BQC,EAzBD,SAACjB,GAAW,IACjBkB,EAAoBlB,EAApBkB,MAAOC,EAAanB,EAAbmB,KAAML,EAAOd,EAAPc,IACpB,OACE,kBAACM,EAAA,EAAD,iBACMpB,EADN,CAEEqB,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,IAER,kBAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,GACvB,kBAACL,EAAA,EAAMM,MAAP,CAAaC,GAAG,iCACbT,IAGL,kBAACE,EAAA,EAAMQ,KAAP,KACE,kBAAChB,EAAD,CAAKiB,IAAKf,EAAKgB,IAAKZ,IACpB,kBAACH,EAAD,KAAII,M,y/BCtBZ,IAAMY,EAAMlB,IAAOmB,IAAV,KAoBHC,EAASpB,IAAOmB,IAAV,KAKNE,EAAUrB,IAAOmB,IAAV,KAiFEG,UApEE,SAACnC,GAAW,IACjBoC,EAASpC,EAAToC,KADgB,EAEUC,IAAMC,UAAS,GAFzB,mBAEjBC,EAFiB,KAENC,EAFM,OAGEH,IAAMC,SAAS,IAHjB,mBAGjBpB,EAHiB,KAGVuB,EAHU,OAIAJ,IAAMC,SAAS,IAJf,mBAIjBnB,EAJiB,KAIXuB,EAJW,OAKFL,IAAMC,SAAS,IALb,mBAKjBxB,EALiB,KAKZ6B,EALY,KAcxB,OACIP,EAAKQ,KAAI,SAACC,EAASC,GAAW,IACnBC,EAAkBF,EAAlBE,KAAMC,EAAYH,EAAZG,SACb,OACI,kBAACjB,EAAD,CAAKkB,IAAK,YACL,kBAAClD,EAAA,EAAD,CAAkBK,MAAI,IAClB,gBAAGI,EAAH,EAAGA,UAAH,OACG,oCACI,kBAAC,SAAD,CAAQ0C,MAAO,IAAKC,GAAI,CACpBC,QAAS5C,EAAY,EAAI,EACzB6C,UAAW7C,EACT,WACA,cAED,SAACR,GAAD,OACG,wBAAIsD,MAAK,eAAOtD,IAAU+C,EAAK,OAIvC,kBAACd,EAAD,KAEIe,EAASJ,KAAI,SAACW,EAAKT,GACf,OACI,kBAAC,SAAD,CAAQG,IAAK,IAAIH,EAAOI,MAAO,KAAOJ,EAAM,GAAIK,GAAI,CAChDC,QAAS5C,EAAY,EAAI,EACzB6C,UAAW7C,EAAY,sBAAwB,gCAE9C,SAACR,GAAD,OACI,kBAACkC,EAAD,CAASoB,MAAK,eAAOtD,GAASiD,IAAKH,GAChC,yBAAKjB,IAAK0B,EAAKC,MAAO1B,IAAKyB,EAAKrC,MAAOuC,QAAS,kBApCpG,SAAoBvC,EAAOC,EAAML,GAC7B0B,GAAa,GACbC,EAASvB,GACTwB,EAAQvB,GACRwB,EAAO7B,GAgC+F4C,CAAWH,EAAKrC,MAAOqC,EAAKpC,KAAMoC,EAAKzC,oBAYjI,kBAAC,EAAD,CACII,MAAOA,EACPC,KAAMA,EACNL,IAAKA,EACL6C,KAAMpB,EACNqB,OAAQ,kBAAMpB,GAAa","file":"static/js/6.ee3e58ef.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport VSensor from \"react-visibility-sensor\";\r\n\r\nclass VisibilitySensor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      active: true,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { active } = this.state;\r\n    const { once, children, ...theRest } = this.props;\r\n    return (\r\n      <VSensor\r\n        active={active}\r\n        onChange={(isVisible) =>\r\n          once &&\r\n          isVisible &&\r\n          this.setState({ active: false }, () => {}\r\n            //console.log(\"turned the thing off!\")\r\n          )\r\n        }\r\n        {...theRest}\r\n      >\r\n        {({ isVisible }) => children({ isVisible })}\r\n      </VSensor>\r\n    );\r\n  }\r\n}\r\n\r\nVisibilitySensor.propTypes = {\r\n  once: PropTypes.bool,\r\n  children: PropTypes.func.isRequired,\r\n};\r\n\r\nVisibilitySensor.defaultProps = {\r\n  once: false,\r\n};\r\n\r\nexport default VisibilitySensor;","import React from 'react';\r\nimport { Modal } from \"react-bootstrap\";\r\nimport styled from 'styled-components';\r\nimport \"./popup.css\";\r\n\r\nconst Img = styled.img`\r\n  max-width: 100%;\r\n  height: auto;\r\n`\r\nconst P = styled.p`\r\n  margin-top: 10px;\r\n`\r\n\r\nconst Popup = (props) => {\r\n  const {title, desc, img} = props;\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          {title}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Img src={img} alt={title} />\r\n        <P>{desc}</P>\r\n      </Modal.Body>\r\n      {/* <Modal.Footer>\r\n        <Button onClick={props.onHide}>Close</Button> \r\n      </Modal.Footer>*/}\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default Popup;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Popup from './Popup';\r\n\r\nimport { Spring } from \"react-spring/renderprops\";\r\nimport VisibilitySensor from \"./VisibilitySensor\";\r\n\r\nconst Div = styled.div`    \r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    //height: 100vh;\r\n    min-height: 100vh;\r\n    //justify-content: center;\r\n    align-items: center; \r\n    background-color: #1f1f1e;\r\n    background: #000000 url('./images/bg/projects.jpg') no-repeat top center;\r\n    //background-size: 100% auto;\r\n    h1{\r\n        margin-top: 25vh;\r\n    }\r\n    @media only screen and (max-width: 600px) {\r\n        h1{\r\n            margin-top: 10vh;\r\n        }\r\n    }\r\n`\r\nconst Images = styled.div`\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    justify-content: space-around;    \r\n`\r\nconst Wrapper = styled.div`\r\n    margin: 20px;\r\n    border: 0;  \r\n    background: none;\r\n    &:hover {              \r\n        filter: brightness(125%);   \r\n        cursor: pointer;    \r\n    }\r\n    img {\r\n        box-shadow: 5px 5px 8px #000000;\r\n    }\r\n`\r\n\r\nconst Projects = (props) => {\r\n    const { data } = props;\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [title, setTitle] = React.useState(\"\");\r\n    const [desc, setDesc] = React.useState(\"\");\r\n    const [img, setImg] = React.useState(\"\");\r\n\r\n    function onImgClick(title, desc, img) {\r\n        setModalShow(true);\r\n        setTitle(title);\r\n        setDesc(desc);\r\n        setImg(img);\r\n    };\r\n\r\n    return (\r\n        data.map((section, index) => {\r\n            const {menu, projects} = section;\r\n            return (\r\n                <Div key={\"projects\"}>\r\n                     <VisibilitySensor once>\r\n                        {({ isVisible }) => (\r\n                            <>\r\n                                <Spring delay={300} to={{\r\n                                    opacity: isVisible ? 1 : 0,\r\n                                    transform: isVisible\r\n                                    ? \"scale(1)\"\r\n                                    : \"scale(2)\",\r\n                                }}>\r\n                                    {(props) => (\r\n                                        <h1 style={{ ...props }}>{menu[2]}</h1>\r\n                                    )}\r\n                                </Spring> \r\n                   \r\n                                <Images>\r\n                                {\r\n                                    projects.map((item,index) => {\r\n                                        return (    \r\n                                            <Spring key={\"s\"+index} delay={300 * (index+1)} to={{\r\n                                                opacity: isVisible ? 1 : 0,\r\n                                                transform: isVisible ? \"scale(1) rotateY(0)\" : \"scale(0.5) rotateY(180deg)\"\r\n                                            }}>\r\n                                                {(props) => (\r\n                                                     <Wrapper style={{ ...props }} key={index}>                  \r\n                                                        <img src={item.thumb} alt={item.title} onClick={() => onImgClick(item.title, item.desc, item.img)} />\r\n                                                    </Wrapper>\r\n                                                )}\r\n                                            </Spring>                                             \r\n                                        )\r\n                                    })                    \r\n                                }   \r\n                                </Images>\r\n                          </>  \r\n                        )}\r\n                    </VisibilitySensor>      \r\n\r\n                    <Popup\r\n                        title={title}\r\n                        desc={desc}\r\n                        img={img}\r\n                        show={modalShow}\r\n                        onHide={() => setModalShow(false)}\r\n                    />             \r\n                </Div>\r\n            )\r\n        })\r\n    )\r\n}\r\n\r\nexport default Projects;"],"sourceRoot":""}