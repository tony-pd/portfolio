{"version":3,"sources":["actions/index.js","constants.js","components/About.js","components/Skills.js","components/Popup.js","components/Projects.js","components/Clients.js","components/Contact.js","App.js","serviceWorker.js","reducers/index.js","index.js","store.js"],"names":["fetchBegin","type","Div","styled","div","About","props","data","map","section","about","key","title","desc","Skills","barStyle","width","index","skills","colors","style","item","skill","ProgressBar","variant","now","rating","Img","img","Popup","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","src","alt","Footer","Images","Wrapper","Projects","React","useState","modalShow","setModalShow","setTitle","setDesc","setImg","projects","thumb","onClick","onImgClick","show","onHide","Clients","clients","Icons","Contact","contact","href","email","icon","faEnvelope","linkedin","target","rel","faLinkedin","github","faGithub","App","getData","this","isLoading","err","className","message","Navbar","collapseOnSelect","expand","bg","fixed","Brand","Toggle","aria-controls","Collapse","Nav","margin","scrollTargetIds","offset","activeNavClass","scrollDuration","headerBackground","Link","Component","connect","state","dispatch","axios","get","then","resp","console","log","payload","fetchSuccess","catch","fetchFailure","Boolean","window","location","hostname","match","initialState","action","ReactDOM","render","store","createStore","rootReducer","applyMiddleware","thunk","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.57294412.chunk.js","sourcesContent":["import * as constants from \"../constants\";\r\nimport axios from 'axios';\r\n\r\nconst fetchBegin = () => ({\r\n    type: constants.FETCH_BEGIN\r\n});\r\n\r\nconst fetchSuccess = resp => ({\r\n    type: constants.FETCH_SUCCESS,\r\n    payload: resp\r\n});\r\n\r\nconst fetchFailure = err => ({\r\n    type: constants.FETCH_FAILURE,\r\n    payload: err\r\n});\r\n\r\nexport const getData = () => dispatch => {\r\n    dispatch(fetchBegin);\r\n    axios.get(\"./db.json\")\r\n    .then(resp => {\r\n      console.log(\"response\",resp.data);\r\n      dispatch(fetchSuccess(resp.data));\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch(fetchFailure(err));\r\n    })\r\n}","export const FETCH_BEGIN = \"FETCH_BEGIN\";\r\nexport const FETCH_SUCCESS = \"FETCH_SUCCESS\";\r\nexport const FETCH_FAILURE = \"FETCH_FAILURE\";","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`    \r\n    display: flex;\r\n    flex-direction: column;\r\n    min-width: 100%;\r\n    min-height: 100vh;\r\n    justify-content: center;\r\n    align-items: center; \r\n    background-color: #282c34;\r\n`\r\nconst About = (props) => {\r\n    const { data } = props;\r\n    return (\r\n        data.map(section => {\r\n            const {about} = section;\r\n            return (\r\n                <Div key={\"about\"}>\r\n                    <h1>{about.title}</h1>\r\n                    <p>{about.desc}</p>\r\n                </Div>\r\n            )\r\n        })\r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport { ProgressBar } from \"react-bootstrap\";\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`    \r\n    display: flex;\r\n    flex-direction: column;\r\n    min-width: 100%;\r\n    min-height: 110vh;\r\n    justify-content: center;\r\n    align-items: center; \r\n    background-color: #292928;\r\n    ul{\r\n        list-style-type:none;\r\n    }\r\n    li{\r\n        margin-bottom:20px;\r\n    }\r\n`\r\n\r\nconst Skills = (props) => {\r\n    const { data } = props;\r\n    const barStyle = {\r\n        width: '70%'\r\n    }\r\n    return (\r\n        data.map((section, index) => {\r\n            const {skills} = section;\r\n            const colors = [\"\",\"success\", \"info\",\"warning\",\"danger\"];\r\n\r\n            return (\r\n                <Div key={\"skills\"} >\r\n                    <h1>Skills</h1>\r\n                    <ul style={barStyle}>\r\n                    {\r\n                        skills.map((item,index) => {\r\n                            return (\r\n                                <li key={index}>\r\n                                    <em>{item.skill}</em>\r\n                                    <ProgressBar variant={colors[index]} now={item.rating} />                      \r\n                                </li>\r\n                            )\r\n                        })                    \r\n                    }                                            \r\n                    </ul>\r\n                </Div>\r\n            )\r\n        })\r\n    )\r\n}\r\n\r\nexport default Skills;","import React from 'react';\r\nimport { Modal } from \"react-bootstrap\";\r\nimport styled from 'styled-components';\r\n\r\nconst Img = styled.img`\r\n  max-width: 100%;\r\n  height: auto;\r\n`\r\n\r\nconst Popup = (props) => {\r\n  const {title, desc, img} = props;\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          {title}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Img src={img} alt={title} />\r\n        <p>{desc}</p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        {/* <Button onClick={props.onHide}>Close</Button> */}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default Popup;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Popup from './Popup';\r\n\r\nconst Div = styled.div`    \r\n    display: flex;\r\n    flex-direction: column;\r\n    min-width: 100%;\r\n    min-height: 110vh;\r\n    justify-content: center;\r\n    align-items: center; \r\n    background-color: #1f1f1e;\r\n`\r\nconst Images = styled.div`\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    justify-content: space-around;    \r\n`\r\nconst Wrapper = styled.div`\r\n    margin: 20px;\r\n    border: 0;  \r\n    background: none;\r\n    &:hover {              \r\n        filter: brightness(125%);   \r\n        cursor: pointer;    \r\n    }\r\n    img {\r\n        box-shadow: 5px 5px 8px #000000;\r\n    }\r\n`\r\n\r\nconst Projects = (props) => {\r\n    const { data } = props;\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [title, setTitle] = React.useState(\"\");\r\n    const [desc, setDesc] = React.useState(\"\");\r\n    const [img, setImg] = React.useState(\"\");\r\n\r\n    function onImgClick(title, desc, img) {\r\n        setModalShow(true);\r\n        setTitle(title);\r\n        setDesc(desc);\r\n        setImg(img);\r\n    };\r\n\r\n    return (\r\n        data.map((section, index) => {\r\n            const {projects} = section;\r\n            return (\r\n                <Div key={\"projects\"}>\r\n                    <h1>Projects</h1>\r\n                    <Images>\r\n                    {\r\n                        projects.map((item,index) => {\r\n                            return (     \r\n                                <Wrapper key={index}>                  \r\n                                    <img src={item.thumb} alt={item.title} onClick={() => onImgClick(item.title, item.desc, item.img)} />\r\n                                </Wrapper>\r\n                            )\r\n                        })                    \r\n                    }   \r\n                    </Images>   \r\n\r\n                    <Popup\r\n                        title={title}\r\n                        desc={desc}\r\n                        img={img}\r\n                        show={modalShow}\r\n                        onHide={() => setModalShow(false)}\r\n                    />             \r\n                </Div>\r\n            )\r\n        })\r\n    )\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`    \r\n    display: flex;\r\n    flex-direction: column;\r\n    min-width: 100%;\r\n    min-height: 110vh;\r\n    justify-content: center;\r\n    align-items: center; \r\n    background-color: #1a1a1a;\r\n`\r\nconst Images = styled.div`\r\n    display: flex;   \r\n    flex-flow: row wrap;    \r\n    justify-content: space-around;    \r\n`\r\nconst Wrapper = styled.div`\r\n    margin: 20px;\r\n    box-shadow: 5px 5px 8px #000000;\r\n`\r\n\r\nconst Clients = (props) => {\r\n    const { data } = props;\r\n\r\n    return (\r\n        data.map(section => {\r\n            const {clients} = section;\r\n            return (\r\n                <Div key={\"clients\"}>\r\n                    <h1>Clients</h1>\r\n                    <Images>\r\n                    {\r\n                        clients.map((item, index) => {                         \r\n                            return (   \r\n                                <Wrapper key={index}>    \r\n                                    <img src={item} alt=\"\" />\r\n                                </Wrapper>\r\n                            )\r\n                        })                    \r\n                    }   \r\n                    </Images>             \r\n                </Div>\r\n            )\r\n        })\r\n    )\r\n}\r\n\r\nexport default Clients;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\r\nimport { faLinkedin, faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Div = styled.div`    \r\n    display: flex;\r\n    flex-direction: column;\r\n    min-width: 100%;\r\n    min-height: 100vh;\r\n    justify-content: center;\r\n    align-items: center; \r\n    background-color: #000000;\r\n`\r\nconst Icons = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    a{\r\n        margin:20px;\r\n        color: white;\r\n        &:hover {              \r\n            filter: brightness(50%);   \r\n            cursor: pointer;    \r\n        }\r\n    }\r\n`\r\n\r\nconst Contact = (props) => {\r\n    const { data } = props;\r\n    return (\r\n        data.map(section => {\r\n            const {contact} = section;\r\n            return (\r\n                <Div key={\"contact\"}>\r\n                    <h1>{contact.title}</h1>\r\n                    <p>{contact.desc}</p>\r\n                    <Icons>                        \r\n                        <a href={contact.email} title=\"email\">\r\n                            <FontAwesomeIcon icon={faEnvelope} />\r\n                        </a>\r\n                        <a href={contact.linkedin} title=\"Linkedin\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <FontAwesomeIcon icon={faLinkedin} />\r\n                        </a>\r\n                        <a href={contact.github} title=\"GitHub\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <FontAwesomeIcon icon={faGithub} />\r\n                        </a>\r\n                    </Icons>\r\n                </Div>\r\n            )\r\n        })\r\n    )\r\n}\r\n\r\nexport default Contact;","import React, {Component, Fragment} from 'react';\r\nimport './App.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getData } from './actions/index';\r\n\r\nimport About from \"./components/About.js\";\r\nimport Skills from \"./components/Skills.js\";\r\nimport Projects from \"./components/Projects.js\";\r\nimport Clients from \"./components/Clients.js\";\r\nimport Contact from \"./components/Contact.js\";\r\n\r\nimport styled from 'styled-components';\r\nimport ScrollspyNav from \"react-scrollspy-nav\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Div = styled.div`\r\n  min-width: 100%;\r\n`\r\nclass App extends Component {\r\n  componentDidMount(){\r\n    const { getData } = this.props;\r\n    getData();\r\n  }\r\n\r\n  render(){\r\n    const { data, isLoading, err } = this.props;\r\n    \r\n    return (\r\n      <div className=\"App\">\r\n        {err ? <p>{err.message}</p> : null}\r\n\r\n        {\r\n          !isLoading ? \r\n            <Fragment>\r\n              <Navbar collapseOnSelect expand=\"lg\" bg=\"black\" variant=\"dark\" fixed=\"top\">\r\n                <Navbar.Brand href=\"#home\"></Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                  <Nav className=\"mr-auto\" style={{margin:\"auto\"}}>\r\n                    <ScrollspyNav\r\n                      scrollTargetIds={[\"section_1\", \"section_2\", \"section_3\",\"section_4\"]}\r\n                      offset={40}\r\n                      activeNavClass=\"is-active\"\r\n                      scrollDuration=\"1000\"\r\n                      headerBackground=\"true\"\r\n                    >  \r\n                        <ul>\r\n                          <li><Nav.Link href=\"/\">About</Nav.Link></li>\r\n                          <li><Nav.Link href=\"#section_1\">Skills</Nav.Link></li>\r\n                          <li><Nav.Link href=\"#section_2\">Projects</Nav.Link></li>\r\n                          <li><Nav.Link href=\"#section_3\">Clients</Nav.Link></li>\r\n                          <li><Nav.Link href=\"#section_4\">Contact</Nav.Link></li>\r\n                        </ul>                            \r\n                    </ScrollspyNav>\r\n                  </Nav>\r\n                </Navbar.Collapse>\r\n              </Navbar>\r\n\r\n              <Div key=\"1\">\r\n                <About data={data}/>\r\n                <div id=\"section_1\"><Skills data={data}/></div>\r\n                <div id=\"section_2\"><Projects data={data}/></div>\r\n                <div id=\"section_3\"><Clients data={data}/></div>             \r\n                <div id=\"section_4\"><Contact data={data}/></div>             \r\n              </Div>\r\n            </Fragment>\r\n          :\r\n            <p>loading..</p>\r\n        }              \r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  data: state.data,\r\n  isLoading: state.isLoading,\r\n  err: state.err\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n getData: () => dispatch(getData())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as constants from \"../constants\";\r\n\r\nconst initialState = {\r\n    isLoading: true,\r\n    data: {},\r\n    err: ''\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n switch (action.type) {\r\n  case constants.FETCH_BEGIN:\r\n   return {\r\n    ...state\r\n   }\r\n  case constants.FETCH_SUCCESS:\r\n   return {\r\n    ...state, data: action.payload, isLoading: false\r\n   }\r\n  case constants.FETCH_FAILURE:\r\n   return {\r\n    ...state, err: action.payload\r\n   }\r\n  default:\r\n   return state\r\n }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={configureStore()}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index';\r\n\r\nexport default function configureStore() {\r\n return createStore(\r\n  rootReducer,\r\n   applyMiddleware(thunk)\r\n );\r\n}"],"sourceRoot":""}