{"version":3,"sources":["components/VisibilitySensor.js","components/Clients.js"],"names":["VisibilitySensor","props","state","active","this","once","children","theRest","onChange","isVisible","setState","Component","defaultProps","Div","styled","div","Images","Wrapper","Clients","data","map","section","menu","clients","key","delay","to","opacity","transform","style","item","index","src","alt"],"mappings":"2LAIMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,QAAQ,GAHO,E,qDAOT,IAAD,OACCA,EAAWC,KAAKF,MAAhBC,OADD,EAEgCC,KAAKH,MAApCI,EAFD,EAECA,KAAMC,EAFP,EAEOA,SAAaC,EAFpB,mCAGP,OACE,kBAAC,IAAD,eACEJ,OAAQA,EACRK,SAAU,SAACC,GAAD,OACRJ,GACAI,GACA,EAAKC,SAAS,CAAEP,QAAQ,IAAS,iBAI/BI,IAEH,gBAAGE,EAAH,EAAGA,UAAH,OAAmBH,EAAS,CAAEG,qB,GAvBRE,aAkC/BX,EAAiBY,aAAe,CAC9BP,MAAM,GAGOL,O,46BCpCf,IAAMa,EAAMC,IAAOC,IAAV,KAoBHC,EAASF,IAAOC,IAAV,KAKNE,EAAUH,IAAOC,IAAV,KAsDEG,UAjDC,SAACjB,GAGb,OAFiBA,EAATkB,KAGCC,KAAI,SAAAC,GAAY,IACVC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,QACb,OACI,kBAACV,EAAD,CAAKW,IAAK,WACN,kBAAC,IAAD,CAAkBnB,MAAI,IACjB,gBAAGI,EAAH,EAAGA,UAAH,OACG,oCACI,kBAAC,SAAD,CAAQgB,MAAO,IAAKC,GAAI,CACpBC,QAASlB,EAAY,EAAI,EACzBmB,UAAWnB,EACT,WACA,cAED,SAACR,GAAD,OACG,wBAAI4B,MAAK,eAAO5B,IAAUqB,EAAK,OAIvC,kBAACN,EAAD,KAEIO,EAAQH,KAAI,SAACU,EAAMC,GACf,OACI,kBAAC,SAAD,CAAQP,IAAK,IAAIO,EAAON,MAAO,KAAOM,EAAM,GAAIL,GAAI,CAChDC,QAASlB,EAAY,EAAI,EACzBmB,UAAWnB,EAAY,WAAa,gBAEnC,SAACR,GAAD,OACI,kBAACgB,EAAD,CAASY,MAAK,eAAO5B,GAASuB,IAAKO,GAChC,yBAAKC,IAAKF,EAAMG,IAAI","file":"static/js/8.177ec22e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport VSensor from \"react-visibility-sensor\";\r\n\r\nclass VisibilitySensor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      active: true,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { active } = this.state;\r\n    const { once, children, ...theRest } = this.props;\r\n    return (\r\n      <VSensor\r\n        active={active}\r\n        onChange={(isVisible) =>\r\n          once &&\r\n          isVisible &&\r\n          this.setState({ active: false }, () => {}\r\n            //console.log(\"turned the thing off!\")\r\n          )\r\n        }\r\n        {...theRest}\r\n      >\r\n        {({ isVisible }) => children({ isVisible })}\r\n      </VSensor>\r\n    );\r\n  }\r\n}\r\n\r\nVisibilitySensor.propTypes = {\r\n  once: PropTypes.bool,\r\n  children: PropTypes.func.isRequired,\r\n};\r\n\r\nVisibilitySensor.defaultProps = {\r\n  once: false,\r\n};\r\n\r\nexport default VisibilitySensor;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Spring } from \"react-spring/renderprops\";\r\nimport VisibilitySensor from \"./VisibilitySensor\";\r\n\r\nconst Div = styled.div`    \r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    //height: 100vh;\r\n    min-height: 100vh;\r\n    //justify-content: center;\r\n    align-items: center; \r\n    background-color: #1a1a1a;\r\n    background: #000000 url('./images/bg/clients.jpg') no-repeat top center;\r\n    //background-size: 100% auto;\r\n    h1{\r\n        margin-top: 35vh;\r\n    }\r\n    @media only screen and (max-width: 600px) {\r\n        h1{\r\n            margin-top: 10vh;\r\n        }\r\n    }\r\n`\r\nconst Images = styled.div`\r\n    display: flex;   \r\n    flex-flow: row wrap;    \r\n    justify-content: space-around;    \r\n`\r\nconst Wrapper = styled.div`\r\n    margin: 20px;\r\n    box-shadow: 5px 5px 8px #000000;\r\n`\r\n\r\nconst Clients = (props) => {\r\n    const { data } = props;\r\n\r\n    return (\r\n        data.map(section => {\r\n            const {menu, clients} = section;\r\n            return (\r\n                <Div key={\"clients\"}>\r\n                    <VisibilitySensor once>\r\n                        {({ isVisible }) => (\r\n                            <>\r\n                                <Spring delay={300} to={{\r\n                                    opacity: isVisible ? 1 : 0,\r\n                                    transform: isVisible\r\n                                    ? \"scale(1)\"\r\n                                    : \"scale(2)\",\r\n                                }}>\r\n                                    {(props) => (\r\n                                        <h1 style={{ ...props }}>{menu[3]}</h1>\r\n                                    )}\r\n                                </Spring> \r\n\r\n                                <Images>\r\n                                {\r\n                                    clients.map((item, index) => {                         \r\n                                        return (   \r\n                                            <Spring key={\"s\"+index} delay={300 * (index+1)} to={{\r\n                                                opacity: isVisible ? 1 : 0,\r\n                                                transform: isVisible ? \"scale(1)\" : \"scale(0.5)\"\r\n                                            }}>\r\n                                                {(props) => (\r\n                                                     <Wrapper style={{ ...props }} key={index}>                  \r\n                                                        <img src={item} alt=\"\" />\r\n                                                    </Wrapper>\r\n                                                )}\r\n                                            </Spring>                                            \r\n                                        )\r\n                                    })                    \r\n                                }   \r\n                                </Images>   \r\n                            </>  \r\n                        )}\r\n                    </VisibilitySensor>                    \r\n                </Div>\r\n            )\r\n        })\r\n    )\r\n}\r\n\r\nexport default Clients;"],"sourceRoot":""}