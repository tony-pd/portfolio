{"version":3,"sources":["components/VisibilitySensor.js","components/About.js"],"names":["VisibilitySensor","props","state","active","this","once","children","theRest","onChange","isVisible","setState","Component","defaultProps","Div","styled","div","About","data","map","section","about","key","delay","from","transform","to","opacity","style","title","desc"],"mappings":"2LAIMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,QAAQ,GAHO,E,qDAOT,IAAD,OACCA,EAAWC,KAAKF,MAAhBC,OADD,EAEgCC,KAAKH,MAApCI,EAFD,EAECA,KAAMC,EAFP,EAEOA,SAAaC,EAFpB,mCAGP,OACE,kBAAC,IAAD,eACEJ,OAAQA,EACRK,SAAU,SAACC,GAAD,OACRJ,GACAI,GACA,EAAKC,SAAS,CAAEP,QAAQ,IAAS,iBAI/BI,IAEH,gBAAGE,EAAH,EAAGA,UAAH,OAAmBH,EAAS,CAAEG,qB,GAvBRE,aAkC/BX,EAAiBY,aAAe,CAC9BP,MAAM,GAGOL,O,4lBCpCf,IAAMa,EAAMC,IAAOC,IAAV,KA0DMC,UAvCD,SAACf,GAEX,OADiBA,EAATgB,KAECC,KAAI,SAAAC,GAAY,IACVC,EAASD,EAATC,MACP,OACI,kBAACP,EAAD,CAAKQ,IAAK,SACL,kBAAC,IAAD,CAAkBhB,MAAI,IAClB,gBAAGI,EAAH,EAAGA,UAAH,OACG,oCACI,kBAAC,SAAD,CAAQa,MAAO,IACfC,KAAM,CACFC,UAAW,YAEfC,GAAI,CACAC,QAASjB,EAAY,EAAI,EACzBe,UAAW,cAEV,SAACvB,GAAD,OACG,wBAAI0B,MAAK,eAAO1B,IAAUmB,EAAMQ,UAGxC,kBAAC,SAAD,CAAQN,MAAO,IAAKG,GAAI,CACpBC,QAASjB,EAAY,EAAI,EACzBe,UAAWf,EAAY,WAAa,gBAEnC,SAACR,GAAD,OACG,uBAAG0B,MAAK,eAAO1B,IAAUmB,EAAMS","file":"static/js/7.f860ad4f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport VSensor from \"react-visibility-sensor\";\r\n\r\nclass VisibilitySensor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      active: true,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { active } = this.state;\r\n    const { once, children, ...theRest } = this.props;\r\n    return (\r\n      <VSensor\r\n        active={active}\r\n        onChange={(isVisible) =>\r\n          once &&\r\n          isVisible &&\r\n          this.setState({ active: false }, () => {}\r\n            //console.log(\"turned the thing off!\")\r\n          )\r\n        }\r\n        {...theRest}\r\n      >\r\n        {({ isVisible }) => children({ isVisible })}\r\n      </VSensor>\r\n    );\r\n  }\r\n}\r\n\r\nVisibilitySensor.propTypes = {\r\n  once: PropTypes.bool,\r\n  children: PropTypes.func.isRequired,\r\n};\r\n\r\nVisibilitySensor.defaultProps = {\r\n  once: false,\r\n};\r\n\r\nexport default VisibilitySensor;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Spring } from \"react-spring/renderprops\";\r\nimport VisibilitySensor from \"./VisibilitySensor\";\r\n\r\nconst Div = styled.div`    \r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    //height: 100vh;\r\n    min-height: 100vh;\r\n    //justify-content: center;\r\n    align-items: center;     \r\n    background-color: #282c34;\r\n    background: #000000 url('./images/bg/about.jpg') no-repeat top center;\r\n    //background-size: 100% auto;\r\n    h1{\r\n        margin-top: 35vh;\r\n    }\r\n    p{\r\n        text-align: center;\r\n        width: 70%;\r\n    }\r\n`\r\nconst About = (props) => {\r\n    const { data } = props;\r\n    return (\r\n        data.map(section => {\r\n            const {about} = section;\r\n            return (\r\n                <Div key={\"about\"}>                    \r\n                     <VisibilitySensor once>\r\n                        {({ isVisible }) => (\r\n                            <>\r\n                                <Spring delay={300} \r\n                                from={{                                                                \r\n                                    transform: \"scale(2)\",\r\n                                }}\r\n                                to={{\r\n                                    opacity: isVisible ? 1 : 0,\r\n                                    transform: \"scale(1)\"                                \r\n                                }}>\r\n                                    {(props) => (\r\n                                        <h1 style={{ ...props }}>{about.title}</h1>\r\n                                    )}\r\n                                </Spring>  \r\n                                <Spring delay={800} to={{\r\n                                    opacity: isVisible ? 1 : 0,\r\n                                    transform: isVisible ? \"scale(1)\" : \"scale(0.5)\"\r\n                                }}>\r\n                                    {(props) => (\r\n                                        <p style={{ ...props }}>{about.desc}</p>\r\n                                    )}\r\n                                </Spring>\r\n                            </>  \r\n                        )}\r\n                    </VisibilitySensor>\r\n                </Div>\r\n            )\r\n        })\r\n    )\r\n}\r\n\r\nexport default About;"],"sourceRoot":""}