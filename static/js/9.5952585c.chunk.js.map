{"version":3,"sources":["components/VisibilitySensor.js","components/Contact.js"],"names":["VisibilitySensor","props","state","active","this","once","children","theRest","onChange","isVisible","setState","Component","defaultProps","Div","styled","div","Icons","Contact","data","map","section","contact","typeArr","email","linkedin","github","tttleArr","iconArr","faEnvelope","faLinkedin","faGithub","key","delay","to","opacity","transform","style","title","config","duration","desc","item","index","href","target","rel","icon"],"mappings":"2LAIMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,QAAQ,GAHO,E,qDAOT,IAAD,OACCA,EAAWC,KAAKF,MAAhBC,OADD,EAEgCC,KAAKH,MAApCI,EAFD,EAECA,KAAMC,EAFP,EAEOA,SAAaC,EAFpB,mCAGP,OACE,kBAAC,IAAD,eACEJ,OAAQA,EACRK,SAAU,SAACC,GAAD,OACRJ,GACAI,GACA,EAAKC,SAAS,CAAEP,QAAQ,IAAS,iBAI/BI,IAEH,gBAAGE,EAAH,EAAGA,UAAH,OAAmBH,EAAS,CAAEG,qB,GAvBRE,aAkC/BX,EAAiBY,aAAe,CAC9BP,MAAM,GAGOL,O,65BCjCf,IAAMa,EAAMC,IAAOC,IAAV,KAmBHC,EAAQF,IAAOC,IAAV,KAwEIE,UA3DC,SAAChB,GAGb,OAFiBA,EAATiB,KAGCC,KAAI,SAAAC,GAAY,IACVC,EAAWD,EAAXC,QACDC,EAAU,CAACD,EAAQE,MAAOF,EAAQG,SAAUH,EAAQI,QACpDC,EAAW,CAAC,SAAU,WAAY,UAClCC,EAAU,CAACC,IAAYC,IAAYC,KAEzC,OACI,kBAACjB,EAAD,CAAKkB,IAAK,WACL,kBAAC,IAAD,CAAkB1B,MAAI,IAClB,gBAAGI,EAAH,EAAGA,UAAH,OACG,oCACI,kBAAC,SAAD,CAAQuB,MAAO,IAAKC,GAAI,CACpBC,QAASzB,EAAY,EAAI,EACzB0B,UAAW1B,EACT,WACA,cAED,SAACR,GAAD,OACG,wBAAImC,MAAK,eAAOnC,IAAUoB,EAAQgB,UAG1C,kBAAC,SAAD,CAAQC,OAAQ,CAACC,SAAU,KAAOP,MAAO,IAAKC,GAAI,CAC9CC,QAASzB,EAAY,EAAI,KAExB,SAACR,GAAD,OACG,uBAAGmC,MAAK,eAAOnC,IAAUoB,EAAQmB,SAIzC,kBAACxB,EAAD,KAEQM,EAAQH,KAAI,SAACsB,EAAMC,GACf,OACI,kBAAC,SAAD,CAAQX,IAAK,IAAIW,EAAOV,MAAO,KAAOU,EAAM,GAAIT,GAAI,CAChDC,QAASzB,EAAY,EAAI,KAExB,SAACR,GAAD,OACI,uBAAGmC,MAAK,eAAOnC,GAAS0C,KAAMF,EAAMJ,MAAOX,EAASgB,GAAQE,OAAO,SAASC,IAAI,uBAC7E,kBAAC,IAAD,CAAiBC,KAAMnB,EAAQe","file":"static/js/9.5952585c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport VSensor from \"react-visibility-sensor\";\r\n\r\nclass VisibilitySensor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      active: true,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { active } = this.state;\r\n    const { once, children, ...theRest } = this.props;\r\n    return (\r\n      <VSensor\r\n        active={active}\r\n        onChange={(isVisible) =>\r\n          once &&\r\n          isVisible &&\r\n          this.setState({ active: false }, () => {}\r\n            //console.log(\"turned the thing off!\")\r\n          )\r\n        }\r\n        {...theRest}\r\n      >\r\n        {({ isVisible }) => children({ isVisible })}\r\n      </VSensor>\r\n    );\r\n  }\r\n}\r\n\r\nVisibilitySensor.propTypes = {\r\n  once: PropTypes.bool,\r\n  children: PropTypes.func.isRequired,\r\n};\r\n\r\nVisibilitySensor.defaultProps = {\r\n  once: false,\r\n};\r\n\r\nexport default VisibilitySensor;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\r\nimport { faLinkedin, faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\nimport { Spring } from \"react-spring/renderprops\";\r\nimport VisibilitySensor from \"./VisibilitySensor\";\r\n\r\nconst Div = styled.div`    \r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    //height: 100vh;\r\n    min-height: 100vh;\r\n    //justify-content: center;\r\n    align-items: center; \r\n    background-color: #000000;\r\n    background: #000000 url('./images/bg/contact.jpg') no-repeat top center;\r\n    //background-size: 100% auto;\r\n    h1{\r\n        margin-top: 35vh;\r\n    }\r\n    p{\r\n        text-align: center;\r\n        width: 70%;\r\n    }\r\n`\r\nconst Icons = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    a{\r\n        margin:20px;\r\n        color: white;\r\n        &:hover {              \r\n            filter: brightness(50%);   \r\n            cursor: pointer;    \r\n        }\r\n    }\r\n`\r\n\r\nconst Contact = (props) => {\r\n    const { data } = props;\r\n    \r\n    return (\r\n        data.map(section => {\r\n            const {contact} = section;\r\n            const typeArr = [contact.email, contact.linkedin, contact.github];\r\n            const tttleArr = [\"e-mail\", \"Linkedin\", \"GitHub\"];\r\n            const iconArr = [faEnvelope, faLinkedin, faGithub];\r\n\r\n            return (\r\n                <Div key={\"contact\"}>\r\n                     <VisibilitySensor once>\r\n                        {({ isVisible }) => (\r\n                            <>\r\n                                <Spring delay={300} to={{\r\n                                    opacity: isVisible ? 1 : 0,\r\n                                    transform: isVisible\r\n                                    ? \"scale(1)\"\r\n                                    : \"scale(2)\",\r\n                                }}>\r\n                                    {(props) => (\r\n                                        <h1 style={{ ...props }}>{contact.title}</h1>\r\n                                    )}\r\n                                </Spring>   \r\n                                <Spring config={{duration: 1000}} delay={600} to={{\r\n                                    opacity: isVisible ? 1 : 0\r\n                                }}>\r\n                                    {(props) => (\r\n                                        <p style={{ ...props }}>{contact.desc}</p>\r\n                                    )}\r\n                                </Spring>              \r\n                                \r\n                                <Icons> \r\n                                    {\r\n                                        typeArr.map((item, index) => {\r\n                                            return(                                                \r\n                                                <Spring key={\"s\"+index} delay={400 * (index+1)} to={{\r\n                                                    opacity: isVisible ? 1 : 0\r\n                                                }}>\r\n                                                    {(props) => (\r\n                                                         <a style={{ ...props }} href={item} title={tttleArr[index]} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                            <FontAwesomeIcon icon={iconArr[index]} />\r\n                                                        </a>\r\n                                                    )}\r\n                                                </Spring> \r\n                                            )\r\n                                        })\r\n                                    }           \r\n                                </Icons>\r\n                            </>  \r\n                        )}\r\n                    </VisibilitySensor>              \r\n                </Div>\r\n            )\r\n        })\r\n    )\r\n}\r\n\r\nexport default Contact;"],"sourceRoot":""}